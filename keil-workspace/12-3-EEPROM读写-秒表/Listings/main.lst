C51 COMPILER V9.54   MAIN                                                                  11/15/2024 15:20:15 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\software\Keil\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Int_EEPROM.h"
   3          #include "Key.h"
   4          #include "Delay.h"
   5          #include "Nixie.h"
   6          #include "Timer0.h"
   7          
   8          unsigned char keyNum;
   9          unsigned char min, sec, miniSec;
  10          unsigned char runFlag;
  11          
  12          unsigned char time[3];
  13          
  14          void main() 
  15          {
  16   1        Timer0_Init();
  17   1        
  18   1        while(1) {
  19   2          keyNum = Key();
  20   2          
  21   2          if (keyNum == 1) 
  22   2          {
  23   3            runFlag = !runFlag; //启动/暂停
  24   3          }
  25   2          
  26   2          else if (keyNum == 2) // 重置清零
  27   2          {
  28   3            min = 0;
  29   3            sec = 0;
  30   3            miniSec = 0;
  31   3          }
  32   2          
  33   2          else if (keyNum == 3) // 将数据存储到EEPROM中
  34   2          {
  35   3            time[0] = min;
  36   3            time[1] = sec;
  37   3            time[2] = miniSec;
  38   3            
  39   3            Int_EEPROM_WriteBytes(0, time, 3);
  40   3            // 存储后缓存清空
  41   3            time[0] = 0;
  42   3            time[1] = 0;
  43   3            time[2] = 0;
  44   3          }
  45   2          
  46   2          else if (keyNum == 4) // 将数据从EEPROM中读出，在数码管显示
  47   2          {
  48   3            Int_EEPROM_ReadBytes(0, time, 3);
  49   3            min = time[0];
  50   3            sec = time[1];
  51   3            miniSec = time[2];
  52   3          }
  53   2          
  54   2          // 显示
C51 COMPILER V9.54   MAIN                                                                  11/15/2024 15:20:15 PAGE 2   

  55   2          Nixie(1, min/10);
  56   2          Nixie(2, min%10);
  57   2          
  58   2          Nixie(3, 11);
  59   2          
  60   2          Nixie(4, sec/10);
  61   2          Nixie(5, sec%10);
  62   2          
  63   2          Nixie(6, 11);
  64   2          
  65   2          Nixie(7, miniSec/10);
  66   2          Nixie(8, miniSec%10);
  67   2        }
  68   1      }
  69          
  70          void sec_loop()
  71          {
  72   1        if (runFlag)
  73   1        {
  74   2          miniSec++;
  75   2          if (miniSec >= 100)
  76   2          {
  77   3            miniSec = 0;
  78   3            sec++;
  79   3            if (sec >= 60) 
  80   3            {
  81   4              sec = 0;
  82   4              min++;
  83   4              
  84   4              if(min >= 60) {
  85   5                min = 0;
  86   5              }
  87   4            }
  88   3          }
  89   2        
  90   2        }
  91   1      }
  92          
  93          void Timer0_Routine() interrupt 1
  94          {
  95   1        static unsigned int T0Count1, T0Count2, T0Count3;
  96   1        
  97   1        TH0 = 64535/256;
  98   1        TL0 = 64535%256;
  99   1        T0Count1++;
 100   1        if (T0Count1 >= 20) //20ms调用一次按键驱动函数
 101   1        {
 102   2          T0Count1 = 0;
 103   2          sec_loop();
 104   2        }
 105   1        
 106   1        T0Count2++;
 107   1        if (T0Count2 >= 20) //20ms调用一次按键驱动函数
 108   1        {
 109   2          T0Count2 = 0;
 110   2          sec_loop();
 111   2        }
 112   1        
 113   1        T0Count3++;
 114   1        if (T0Count3 >= 20) //20ms调用一次按键驱动函数
 115   1        {
 116   2          T0Count3 = 0;
C51 COMPILER V9.54   MAIN                                                                  11/15/2024 15:20:15 PAGE 3   

 117   2          sec_loop();
 118   2        }
 119   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    349    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
