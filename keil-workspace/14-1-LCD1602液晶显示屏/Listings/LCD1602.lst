C51 COMPILER V9.54   LCD1602                                                               11/18/2024 11:42:19 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: D:\software\Keil\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\LCD1602.lst) TABS(2) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include <REGX52.H>
   2          
   3          //引脚定义
   4          sbit LCD_RS = P2^6;
   5          sbit LCD_RW = P2^5;
   6          sbit LCD_EN = P2^7;
   7          
   8          #define LCD_DataPort P0
   9          
  10          /**
  11            * @brief  LCD1602延时函数，12MHz调用可延时1ms
  12            * @param  无
  13            * @retval 无
  14            */
  15          void LCD_Delay()    //@12.000MHz 1ms
  16          {
  17   1        unsigned char i, j;
  18   1      
  19   1        i = 2;
  20   1        j = 239;
  21   1        do
  22   1        {
  23   2          while (--j);
  24   2        } while (--i);
  25   1      }
  26          
  27          int LCD_Pow(int x, int y)
  28          {
  29   1        unsigned char i;
  30   1        int res = 1;
  31   1        for(i = 0; i < y; i++)
  32   1        {
  33   2          res *= x;
  34   2        }
  35   1        return res;
  36   1      }
  37          
  38          void LCD_WriteCommand(unsigned char command)
  39          {
  40   1        LCD_RS = 0;
  41   1        LCD_RW = 0;
  42   1        LCD_DataPort = command;
  43   1        
  44   1        LCD_EN = 1;
  45   1        LCD_Delay();
  46   1        LCD_EN = 1;
  47   1        LCD_Delay();
  48   1      }
  49          
  50          void LCD_WriteData(unsigned char byte)
  51          {
  52   1        LCD_RS = 0;
  53   1        LCD_RW = 0;
  54   1        LCD_DataPort = byte;
C51 COMPILER V9.54   LCD1602                                                               11/18/2024 11:42:19 PAGE 2   

  55   1        
  56   1        LCD_EN = 1;
  57   1        LCD_Delay();
  58   1        LCD_EN = 1;
  59   1        LCD_Delay();
  60   1      }
  61          
  62          void LCD_Init()
  63          {
  64   1        LCD_WriteCommand(0x38);
  65   1        LCD_WriteCommand(0x0c);
  66   1        LCD_WriteCommand(0x06);
  67   1        LCD_WriteCommand(0x01);
  68   1      }
  69          
  70          void LCD_Cursor(unsigned char line, unsigned char col)
  71          {
  72   1        if (line == 1) {
  73   2          LCD_WriteCommand(0x80|(col-1));
  74   2        } else {
  75   2          LCD_WriteCommand(0x80|(col-1)+0x40);
  76   2        }
  77   1      }
  78          
  79          void LCD_ShowChar(unsigned char line, unsigned char col, unsigned char ch)
  80          {
  81   1        LCD_Cursor(line, col);
  82   1        LCD_WriteData(ch);
  83   1      }
  84          
  85          void LCD_ShowString(unsigned char line, unsigned char col, unsigned char *string)
  86          {
  87   1        unsigned char i;
  88   1        
  89   1        LCD_Cursor(line, col);
  90   1        for (i = 0; string[i] != '\0'; i++) {
  91   2          LCD_WriteData(string[i]);
  92   2        }
  93   1      }
  94          
  95          void LCD_ShowNum(unsigned char line, unsigned char col, unsigned int num, unsigned char len)
  96          {
  97   1        unsigned char i;
  98   1        
  99   1        LCD_Cursor(line, col);
 100   1        for (i = len; i > 0; i--) {
 101   2          LCD_WriteData(num/LCD_Pow(10, i-1)%10 + '0');
 102   2        }
 103   1      }
 104          
 105          void LCD_ShowSignNum(unsigned char line, unsigned char col, unsigned int num, unsigned char len)
 106          {
 107   1        unsigned char i;
 108   1        unsigned int temp;
 109   1        
 110   1        LCD_Cursor(line, col);
 111   1        
 112   1        if (num >= 0) 
 113   1        {
 114   2          LCD_WriteData('+');
 115   2          temp = num;
 116   2        }
C51 COMPILER V9.54   LCD1602                                                               11/18/2024 11:42:19 PAGE 3   

 117   1        else
 118   1        {
 119   2          LCD_WriteData('-');
 120   2          temp = -num;
 121   2        }
 122   1        
 123   1        for (i = len; i > 0; i--) {
 124   2          LCD_WriteData(temp/LCD_Pow(10, i-1)%10 + '0');
 125   2        }
 126   1      }
 127          
 128          void LCD_ShowHexNum(unsigned char line, unsigned char col, unsigned int num, unsigned char len)
 129          {
 130   1        unsigned char i;
 131   1        unsigned signNum;
 132   1        
 133   1        LCD_Cursor(line, col);
 134   1        
 135   1        for (i = len; i > 0; i--) {
 136   2          signNum = num/LCD_Pow(16, i-1)%16;
 137   2          if (signNum < 10)
 138   2          {
 139   3            LCD_WriteData(signNum + '0');
 140   3          }
 141   2          else
 142   2          {
 143   3            LCD_WriteData(signNum-10 + 'A');
 144   3          } 
 145   2        }
 146   1      }
 147          
 148          void LCD_ShowBinNum(unsigned char line, unsigned char col, unsigned int num, unsigned char len)
 149          {
 150   1        unsigned char i;
 151   1        
 152   1        LCD_Cursor(line, col);
 153   1        for (i = len; i > 0; i--) {
 154   2          LCD_WriteData(num/LCD_Pow(2, i-1)%2 + '0');
 155   2        }
 156   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    386    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
